generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chatrooms {
  id       Int        @id @default(autoincrement())
  parties  parties    @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  messages messages[]
}

model messages {
  id        Int       @id @default(autoincrement())
  chatid    Int
  senderid  Int
  content   String
  createdat DateTime? @default(now()) @db.Timestamp(6)
  chatrooms chatrooms @relation(fields: [chatid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users     @relation(fields: [senderid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model parties {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  hostid      Int
  chatid      String?    @unique @db.VarChar(255)
  bannerimage String // url
  time_start  DateTime
  time_end    DateTime?

  state            String
  city             String
  zip              String
  street_number    String
  street           String
  unit             String?
  longitude        Float
  latitude         Float
  plus_code_global String

  rsvp_users       Int[] // user_profile id's
}

model sessions {
  name   String   @db.VarChar(255)
  token  String   @id @db.VarChar(255)
  expiry DateTime @db.Timestamp(6)
}

model account {
  id       Int        @id @default(autoincrement())
  eventee_account_id Int
  hosting_account_id Int
}

model user_profile {
  id       Int        @id @default(autoincrement())
  email    String?    @unique @db.VarChar(255)
  phone    String?    @unique @db.VarChar(255)
  hash     String     @db.VarChar(255)
  messages  messages[]
  parties   parties[]
}

model hosting_profile {
  id       Int        @id @default(autoincrement())
  email    String?    @unique @db.VarChar(255)
  phone    String?    @unique @db.VarChar(255)
  hash     String     @db.VarChar(255)
  messages        messages[]
  parties_hosting parties[]
}
