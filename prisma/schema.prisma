generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique @db.VarChar(255)
  phone      String?      @unique @db.VarChar(64)
  host_id    String       @unique
  host_email String[]     @unique
  host_phone String[]     @unique
  hash       String
  about      String?
  is_host    Boolean?     @default(false)
  created    DateTime     @default(now()) @db.Timestamp(6)
  updated    DateTime     @default(now()) @db.Timestamp(6)
  seen       DateTime     @default(now()) @db.Timestamp(6)
  delete_by  DateTime?    @default(dbgenerated("(CURRENT_TIMESTAMP + '30 days'::interval)")) @db.Timestamp(6)
  attendance attendance[]
  party      party[]
  settings   settings[]
}

model party {
  id            Int          @id @default(autoincrement())
  party_name    String       @db.VarChar(255)
  host_id       Int
  chat_id       String?      @db.VarChar(255)
  host_email    String?      @db.VarChar(255)
  host_phone    String?      @db.VarChar(64)
  time_start    DateTime     @db.Timestamp(6)
  time_end      DateTime?    @db.Timestamp(6)
  banner_image  String?      @db.VarChar(255)
  state         String       @db.VarChar(255)
  city          String       @db.VarChar(255)
  zip           String       @db.VarChar(255)
  street_number String       @db.VarChar(255)
  street        String       @db.VarChar(255)
  unit          String       @db.VarChar(255)
  longitude     Float        @db.Real
  latitude      Float        @db.Real
  plus_code     String?      @db.VarChar(255)
  widgets       Json?
  guests        Json?
  attendance    attendance[]
  account       account      @relation(fields: [host_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model session {
  token  String   @id @db.VarChar(255)
  expiry DateTime @db.Timestamp(6)
}

model settings {
  id      Int      @id @default(autoincrement())
  user_id Int?
  account account? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model attendance {
  user_id  Int
  party_id Int
  party    party   @relation(fields: [party_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  account  account @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, party_id])
}

enum property {
  residential
  commercial
}
